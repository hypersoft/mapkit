NOTE:

 (1) OPTIONS affect the output of FUNCTIONS.

 (2) OPTIONS are executed in REVERSE-ORDER of command specification; except:
     (1) when an OPTION is not a shortcut to a FUNCTION.
         (1.a) if the OPTION is not a shortcut to a FUNCTION, it is instantly
               applied THROUGH the OPTION or FUNCTION following it in the
               command specification. Which means all environment OPTIONS are
               immediately effective at the beginning of the command following
               it; being of the form: [ENVIRONMENT] OPTION OR FUNCTION.

               [see: the function definitions of the OPTIONS in source code
                     to verify the above form.
                
                  file://$(realpath $0)
               ]

 (3) CAVEAT: using the form -word:parameter, where parameter expands to an empty
     string will cause the parmater parser to grab the next available parameter.
     the only fix for this is a change of syntax. Please use -word= to avoid the
     pitfall unless you provide literal string data. The = operator does not
     apply to options which are separated from their values. Therefore the
     correct usage as mentioned here is a guranteed safeguard for the hazzard.

See: "regex - POSIX.2 regular expressions" within the Linux Programmer's Manual
     for help on expressions (\`man 7 regex').

END $COMMAND --help ##################################################################

$COMMAND [OPTIONS] FUNCTION [...]

General Purpose, Mutliple Record, File, Expression and Execution: Utility

 ALL EXPRESSIONS, REGULARLY: EXTENDED.

License: MIT
GitHub: https://github.com/hypersoft/x-director

                                           (C) 2018; Triston-Jerard: Taylor;
                                                     Hypersoft-Systems: U.-S.-A.

EOF

exit 1;

} >&2;
